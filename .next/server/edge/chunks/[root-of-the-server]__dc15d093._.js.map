{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["\nimport { type NextRequest, NextResponse } from 'next/server';\n\n// In a real app, you would use the Firebase Admin SDK to verify the token.\n// For example: import { getAuth } from 'firebase-admin/auth';\n\nasync function verifyAuth(request: NextRequest) {\n  const token = request.cookies.get('AuthToken')?.value;\n  \n  // The admin user ID you provided.\n  const adminUid = \"ilkjHJldx1OskTlWMn1erTCZoN62\";\n\n  if (!token) {\n    // If there is no token, the user is not authenticated.\n    return { isAuthenticated: false, isAdmin: false, uid: null };\n  }\n\n  // --- REAL IMPLEMENTATION ---\n  // In a real app, you would uncomment and use this block.\n  /*\n  try {\n    // This verifies the token is valid and hasn't been tampered with.\n    const decodedToken = await getAuth().verifyIdToken(token);\n    // Check for the 'admin' custom claim.\n    const isAdmin = decodedToken.admin === true;\n    return { isAuthenticated: true, isAdmin, uid: decodedToken.uid };\n  } catch (error) {\n    // If verification fails, treat the user as unauthenticated.\n    console.error('Auth token verification failed:', error);\n    return { isAuthenticated: false, isAdmin: false, uid: null };\n  }\n  */\n\n  // --- PROTOTYPE SIMULATION ---\n  // For this prototype, we'll simulate the verification process.\n  if (token === 'admin-super-secret-token') {\n    return { isAuthenticated: true, isAdmin: true, uid: adminUid };\n  }\n  \n  if (token === 'user-secret-token') {\n    return { isAuthenticated: true, isAdmin: false, uid: 'a-regular-user' };\n  }\n  \n  return { isAuthenticated: false, isAdmin: false, uid: null };\n}\n\n\nexport async function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n  const { isAuthenticated, isAdmin } = await verifyAuth(request);\n\n  const isAuthPage = pathname.startsWith('/login') || pathname.startsWith('/signup');\n  const isAdminLoginPage = pathname === '/admin/login';\n  const isAppPage = pathname.startsWith('/dashboard') || pathname.startsWith('/matching') || pathname.startsWith('/chat');\n\n  // Protect the /admin routes\n  if (pathname.startsWith('/admin') && !isAdminLoginPage) {\n     if (!isAuthenticated || !isAdmin) {\n        // If not an admin, redirect to the admin login page.\n        return NextResponse.redirect(new URL('/admin/login', request.url));\n     }\n  }\n  \n   // If an authenticated admin tries to access a regular user page, redirect them to admin dashboard\n  if (isAuthenticated && isAdmin && isAppPage) {\n    return NextResponse.redirect(new URL('/admin/dashboard', request.url));\n  }\n\n  // If an authenticated user tries to access login/signup, redirect to dashboard\n  if (isAuthenticated && !isAdmin && isAuthPage && !isAdminLoginPage) {\n      return NextResponse.redirect(new URL('/dashboard', request.url));\n  }\n  \n  // Protect all other app routes\n  if (isAppPage) {\n    if (!isAuthenticated) {\n       return NextResponse.redirect(new URL('/login', request.url));\n    }\n  }\n\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  // This matcher ensures the middleware runs on all relevant pages.\n  matcher: [\n    '/admin/:path*',\n    '/dashboard/:path*', \n    '/matching/:path*',\n    '/chat/:path*',\n    '/login', \n    '/signup'\n  ],\n};\n"],"names":[],"mappings":";;;;AACA;AAAA;;AAEA,2EAA2E;AAC3E,8DAA8D;AAE9D,eAAe,WAAW,OAAoB;IAC5C,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,cAAc;IAEhD,kCAAkC;IAClC,MAAM,WAAW;IAEjB,IAAI,CAAC,OAAO;QACV,uDAAuD;QACvD,OAAO;YAAE,iBAAiB;YAAO,SAAS;YAAO,KAAK;QAAK;IAC7D;IAEA,8BAA8B;IAC9B,yDAAyD;IACzD;;;;;;;;;;;;EAYA,GAEA,+BAA+B;IAC/B,+DAA+D;IAC/D,IAAI,UAAU,4BAA4B;QACxC,OAAO;YAAE,iBAAiB;YAAM,SAAS;YAAM,KAAK;QAAS;IAC/D;IAEA,IAAI,UAAU,qBAAqB;QACjC,OAAO;YAAE,iBAAiB;YAAM,SAAS;YAAO,KAAK;QAAiB;IACxE;IAEA,OAAO;QAAE,iBAAiB;QAAO,SAAS;QAAO,KAAK;IAAK;AAC7D;AAGO,eAAe,WAAW,OAAoB;IACnD,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IACpC,MAAM,EAAE,eAAe,EAAE,OAAO,EAAE,GAAG,MAAM,WAAW;IAEtD,MAAM,aAAa,SAAS,UAAU,CAAC,aAAa,SAAS,UAAU,CAAC;IACxE,MAAM,mBAAmB,aAAa;IACtC,MAAM,YAAY,SAAS,UAAU,CAAC,iBAAiB,SAAS,UAAU,CAAC,gBAAgB,SAAS,UAAU,CAAC;IAE/G,4BAA4B;IAC5B,IAAI,SAAS,UAAU,CAAC,aAAa,CAAC,kBAAkB;QACrD,IAAI,CAAC,mBAAmB,CAAC,SAAS;YAC/B,qDAAqD;YACrD,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,gBAAgB,QAAQ,GAAG;QACnE;IACH;IAEC,kGAAkG;IACnG,IAAI,mBAAmB,WAAW,WAAW;QAC3C,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,oBAAoB,QAAQ,GAAG;IACtE;IAEA,+EAA+E;IAC/E,IAAI,mBAAmB,CAAC,WAAW,cAAc,CAAC,kBAAkB;QAChE,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;IAClE;IAEA,+BAA+B;IAC/B,IAAI,WAAW;QACb,IAAI,CAAC,iBAAiB;YACnB,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;QAC7D;IACF;IAGA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,kEAAkE;IAClE,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;KACD;AACH"}}]
}